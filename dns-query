#!/usr/bin/lua

local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' -- You will need this for encoding/decoding

-- base64 decoding
function dec(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
    end))
end

local socket = require('socket')

local info = os.getenv("QUERY_STRING")
local params = {}
local query = ""

if os.getenv("REQUEST_METHOD")=="POST" then
    query = io.read("*all")
else

    for name, value in string.gmatch(info .. '&', '(.-)%=(.-)%&') do
        value = string.gsub(value , '%+', ' ')
        value = string.gsub(value , '%%(%x%x)', function(dpc)
                return string.char(tonumber(dpc,16))
                end )
        params[name] = value
    end

    query =  dec(params['dns'])
end

s, err = socket.udp()
r, err = s:setpeername('127.0.0.1',53)
s:settimeout(5)
s:send(query)
res, err = s:receive()
s:close()

print ("content-type: application/dns-message")
print ("content-length: "..string.len(res))
print ("cache-control: max-age=600")
print ("")
io.write(res)
